buildscript {
    ext {
    }
    dependencies {
        classpath "org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:3.0"
        apply from: './gradle/globalProperties.gradle'
    }
}

plugins {
    id 'java-library'
    id 'org.springframework.boot' version "${springBootVersion}"
    id 'io.spring.dependency-management' version "${springDepMngmnt}"
    id 'com.diffplug.spotless' version '6.22.0'
    id 'com.vanniktech.maven.publish' version '0.26.0'
}
apply plugin: 'signing'
group = 'io.github.sannon'
version = '0.4.1'

java {
    sourceCompatibility = "${javaVersion}"
}

repositories {
    mavenCentral()
    maven {
        url "https://s01.oss.sonatype.org/content/repositories/snapshots/"
    }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.14.0'
    testImplementation group: 'org.apache.commons', name: 'commons-dbcp2', version: '2.8.0'
    testImplementation group: 'org.hsqldb', name: 'hsqldb', version: "${hsqldbVersion}"

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation group: 'org.testcontainers', name: 'postgresql'
    testImplementation group: 'org.testcontainers', name: 'testcontainers', version: "${testContainers}"
    testImplementation group: 'org.postgresql', name: 'postgresql', version: '42.7.1'
    testImplementation group: 'org.testcontainers', name: 'junit-jupiter', version: "${testContainers}"
    testImplementation "org.assertj:assertj-core:3.17.2"

    compileOnly("org.projectlombok:lombok:${lombokVersion}")
    annotationProcessor("org.projectlombok:lombok:${lombokVersion}")
    testAnnotationProcessor("org.projectlombok:lombok:${lombokVersion}")
    testCompileOnly("org.projectlombok:lombok:${lombokVersion}")
}

tasks.named('test') {
    useJUnitPlatform()
}

spotless {
    java {
        licenseHeaderFile "${project.rootDir}/LICENSE.txt"
        target 'src/**/*.java'
    }
}
import com.vanniktech.maven.publish.SonatypeHost

mavenPublishing {
    publishToMavenCentral(SonatypeHost.S01)

    signAllPublications()
}
